Object subclass: #CuOOra	instanceVariableNames: 'usuarios topicos'	classVariableNames: ''	package: 'Parte1-model'!!CuOOra methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 18:01'!usuarios	^usuarios.! !!CuOOra methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/1/2020 16:03'!obtenerRespuestasDePregunta:_pregunta^ _pregunta respuestas asSortedCollection: [ :ea | ea calcularPuntaje < ea calcularPuntaje  ].! !!CuOOra methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2020 19:52'!existeUsuario:_nombre con:_contrasenha	^ usuarios detect: [ :ea | ea nombre = _nombre & (ea contrasenha = _contrasenha)  ] ifNone: [ ^ nil ].! !!CuOOra methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 16:53'!existeTopico:_nombreTopico	^ topicos detect: [ :ea | ea nombre = _nombreTopico] ifNone:[ ^ self agregarNombreTopico: _nombreTopico descripcion: '' ].! !!CuOOra methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/1/2020 16:37'!obtenerPuntajeDe:_usuario^ _usuario calcularPuntaje.! !!CuOOra methodsFor: 'initialization' stamp: 'tom 3/26/2020 19:00'!obtenerPreguntasDe:topico 
"esto funciona si se elije de los topicos de CuOOra cuando en la pregunta se elije los topicos"
"verificar que exista en caso de q me mande uno cualquiera "
^topico preguntas ! !!CuOOra methodsFor: 'initialization' stamp: 'tom 3/27/2020 15:11'!initialize 
usuarios:= OrderedCollection new.
topicos := OrderedCollection new.

! !!CuOOra methodsFor: 'public' stamp: 'tom 3/27/2020 15:28'!crearUsuario: aNick contrasenha: aContrasenha 
|usuario|
usuario := Usuario nombreUsuario:aNick contrasenha:aContrasenha.
^usuarios add: usuario .! !!CuOOra methodsFor: 'public' stamp: 'tom 3/26/2020 02:46'!agregarTopicoFav: untopico para:unusuario 
unusuario agregarTopicosFav:untopico.! !!CuOOra methodsFor: 'public' stamp: 'tom 3/26/2020 19:04'!todasLasPreguntasDe:unUsuario 
^unUsuario preguntas  ! !!CuOOra methodsFor: 'public' stamp: 'Anonymous 4/4/2020 18:55'!obtenerPreguntasRelevantesDe:unUsuario 
^ unUsuario quieroPreguntasRelevantes.! !!CuOOra methodsFor: 'public' stamp: 'tom 3/27/2020 15:18'!agregarNombreTopico: unNombre descripcion:unDescripcion
"27/03.pruebas me retorna el topico creado(sacarlo mas tarde)"
|topico|
topico:= Topico nombre:unNombre  descripcion:unDescripcion .
^topicos add: topico! !!CuOOra methodsFor: 'public' stamp: 'tom 3/26/2020 11:22'!darLikeA: unPublicacion usuario:unUsuario 
"como ya tengo la publicacion entonces a esta(tiene una coleccion de likes que los elementos son reacciones) retorna true en caso de realizar la accion y false en caso de que no"
unPublicacion darLike:unUsuario .! !!CuOOra methodsFor: 'public' stamp: 'tom 3/26/2020 18:53'!borrarPregunta:unaPregunta
unaPregunta borrarme! !!CuOOra methodsFor: 'public' stamp: 'tom 3/26/2020 19:04'!todasLasRespuestasDe:unUsuario 
^unUsuario respuestas ! !!CuOOra methodsFor: 'public' stamp: 'tom 3/26/2020 11:23'!darDisLikeA: unPublicacion usuario:unUsuario 
"como ya tengo la publicacion entonces a esta(tiene una coleccion de likes que los elementos son reacciones) retorna true en caso de realizar la accion y false en caso de que no"
unPublicacion darDisLike:unUsuario .! !!CuOOra methodsFor: 'public' stamp: 'Anonymous 4/1/2020 17:05'!agregarTextoRespuesta: unTexto aLaPregunta:unaPregunta usuario:unUsuario
|respuesta|
respuesta := Respuesta texto:unTexto  respondePregunta:unaPregunta usuario:unUsuario .
unaPregunta agregarRespuesta:respuesta .
unUsuario guardarRespuesta:respuesta .^respuesta .! !!CuOOra methodsFor: 'public' stamp: 'tom 3/25/2020 11:11'!unUsuario:unUsuario sigueA: unUsuarioAseguir
unUsuario seguir:unUsuarioAseguir .! !!CuOOra methodsFor: 'public' stamp: 'Anonymous 4/1/2020 17:05'!"dudas yo creo que unaTopica seria una colleccion de topicos "
agregarTituloPregunta: unTitulo descripcion:unaDescripcion usuario:unUsuario topica:unaTopica
|nuevaPregunta|
nuevaPregunta := Pregunta  titulo:unTitulo descripcion:unaDescripcion usuario:unUsuario topico:unaTopica .

unUsuario agregarPregunta: nuevaPregunta .^nuevaPregunta .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuOOra class	instanceVariableNames: 'soleInstance'!!CuOOra class methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 19:43'!soleInstance	^ soleInstance ifNil: [ soleInstance := self new ].! !!CuOOra class methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 19:43'!clearSoleInstance	soleInstance := nil.! !Object subclass: #Publicacion	instanceVariableNames: 'likes dislikes fecha'	classVariableNames: ''	package: 'Parte1-model'!!Publicacion methodsFor: 'initialization' stamp: 'Anonymous 3/27/2020 19:48'!darLike:unUsuario
"dioLike retorna true si dio like caso contrario da false"
"dioDislike retorna true si dio dislike"
"el mejor caso es q si dio like el usuario retorna falso que seria q no puede ralizar la accion, si no dio like entonces va tener que agregar y siempre retorna true"
(self dioLike:unUsuario) ifTrue:[^ false.]ifFalse: [ 
	(self dioDisLike: unUsuario)ifTrue:[self eliminarDislikeyAgregar:unUsuario.] ifFalse: [ self agregarLike:unUsuario.]
	  ].
^true! !!Publicacion methodsFor: 'initialization' stamp: 'tom 3/26/2020 11:29'!darDisLike:unUsuario
"dioLike retorna true si dio like caso contrario da false"
"dioDislike retorna true si dio dislike"
"el mejor caso es q si dio like el usuario retorna falso que seria q no puede ralizar la accion, si no dio like entonces va tener que agregar y siempre retorna true"
(self dioDisLike:unUsuario) ifTrue:[^ false.]ifFalse: [ 
	(self dioLike: unUsuario)ifTrue:[self eliminarlikeyAgregar:unUsuario.] ifFalse: [ self agregarDisLike:unUsuario.]
	  ].
^true! !!Publicacion methodsFor: 'initialization' stamp: 'tom 3/25/2020 12:13'!initialize 
"like y dislike es una coleccion de reaccion para saber la cantidad de like solo debo llamar a like size "
fecha := Date today.
likes :=OrderedCollection new.
dislikes :=OrderedCollection new.! !!Publicacion methodsFor: 'private' stamp: 'tom 3/26/2020 11:29'!eliminarlikeyAgregar:unUsuario
likes remove: (self dameReaccionDelUser:unUsuario de:likes).
self agregarDisLike: unUsuario ! !!Publicacion methodsFor: 'private' stamp: 'tom 3/25/2020 22:19'!buscarUsuario: usuario coleccion: likeodislike
likeodislike ifEmpty: [ ^false ].
^likeodislike contains: [ :coleccion| coleccion estaEste:usuario  ]! !!Publicacion methodsFor: 'private' stamp: 'tom 3/26/2020 11:30'!agregarDisLike:unUsuario
|reaccion|
reaccion := Reaccion usuario: unUsuario .
dislikes add: reaccion 
! !!Publicacion methodsFor: 'private' stamp: 'Anonymous 3/27/2020 19:48'!dioLike:unUsuario^ (( likes select:[ :ea | ea usuario = unUsuario]) size > 0).
"^ self buscarUsuario: unUsuario  coleccion: likes "
! !!Publicacion methodsFor: 'private' stamp: 'tom 3/25/2020 22:29'!dioDisLike:unUsuario 
^ self buscarUsuario: unUsuario  coleccion: dislikes  
! !!Publicacion methodsFor: 'private' stamp: 'tom 3/25/2020 22:47'!eliminarDislikeyAgregar:unUsuario
dislikes remove: (self dameReaccionDelUser:unUsuario de:dislikes).
self agregarLike: unUsuario ! !!Publicacion methodsFor: 'private' stamp: 'tom 3/25/2020 22:45'!dameReaccionDelUser:unUsuario de:adislikes
^ adislikes detect: [ :reaccion| reaccion usuario = unUsuario  ] ! !!Publicacion methodsFor: 'private' stamp: 'tom 3/26/2020 02:33'!agregarLike:unUsuario
|reaccion|
reaccion := Reaccion usuario: unUsuario .
likes add: reaccion 
! !!Publicacion methodsFor: 'accessing' stamp: 'Anonymous 4/1/2020 16:26'!dislikes^dislikes.! !!Publicacion methodsFor: 'accessing' stamp: 'Anonymous 4/1/2020 16:26'!likes^likes.! !!Publicacion methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/2/2020 16:09'!calcularPuntaje^ ( (likes size) - (dislikes size) ).! !Publicacion subclass: #Pregunta	instanceVariableNames: 'titulo descripcion usuario topicos respuestas'	classVariableNames: ''	package: 'Parte1-model'!!Pregunta methodsFor: 'accessing' stamp: 'tom 3/25/2020 03:19'!descripcion: unaDesc 
descripcion := unaDesc ! !!Pregunta methodsFor: 'accessing' stamp: 'Anonymous 4/2/2020 13:06'!respuestas^ respuestas.! !!Pregunta methodsFor: 'accessing' stamp: 'tom 3/26/2020 18:57'!borrarme
"elimina todo rastro "
"primero elimina la pregunta en los topicos"
topicos do: [ :topico| topico eliminar: self].
self usuario eliminarPregunta:self.
respuestas do:[:respuesta| respuesta eliminar]! !!Pregunta methodsFor: 'accessing' stamp: 'tom 3/25/2020 10:51'!agregarRespuesta:unRespuesta 
respuestas add: unRespuesta ! !!Pregunta methodsFor: 'accessing' stamp: 'tom 3/26/2020 18:39'!usuario 
^usuario ! !!Pregunta methodsFor: 'accessing' stamp: 'tom 3/27/2020 15:56'!topico: unTopico
topicos := unTopico.
topicos do: [ :topico| topico guardar: self ]! !!Pregunta methodsFor: 'accessing' stamp: 'tom 3/27/2020 15:58'!initialize 
super initialize .
topicos:= OrderedCollection new.
respuestas:= OrderedCollection new.
! !!Pregunta methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 18:14'!titulo	^ titulo.! !!Pregunta methodsFor: 'accessing' stamp: 'tom 3/25/2020 03:19'!titulo: unTitulo 
titulo :=unTitulo ! !!Pregunta methodsFor: 'accessing' stamp: 'tom 3/25/2020 03:19'!usuario: unUsuario 
usuario := unUsuario ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pregunta class	instanceVariableNames: ''!!Pregunta class methodsFor: 'as yet unclassified' stamp: 'tom 3/27/2020 16:03'!titulo:unTitulo descripcion:unaDescripcion usuario:unUsuario topico: unTopico

^self new 
titulo:unTitulo ;
descripcion:unaDescripcion;
topico:unTopico;
usuario:unUsuario ;yourself! !Object subclass: #Reaccion	instanceVariableNames: 'fecha usuario'	classVariableNames: ''	package: 'Parte1-model'!!Reaccion methodsFor: 'public' stamp: 'Anonymous 4/1/2020 16:54'!fecha:_fechafecha := _fecha.! !!Reaccion methodsFor: 'public' stamp: 'Anonymous 4/1/2020 16:54'!usuario:unUsuariousuario := unUsuario.! !!Reaccion methodsFor: 'public' stamp: 'tom 3/25/2020 22:45'!usuario 
^usuario ! !!Reaccion methodsFor: 'public' stamp: 'tom 3/25/2020 22:17'!estaEste:unusuario
^usuario = unusuario ! !!Reaccion methodsFor: 'initialization' stamp: 'tom 3/25/2020 12:01'!initialize 
fecha:=Date today ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Reaccion class	instanceVariableNames: ''!!Reaccion class methodsFor: 'accessing' stamp: 'tom 3/25/2020 12:01'!usuario: unUsuario 
^self new
usuario: unUsuario ! !Publicacion subclass: #Respuesta	instanceVariableNames: 'preguntaResponde texto usuario'	classVariableNames: ''	package: 'Parte1-model'!!Respuesta methodsFor: 'accessing' stamp: 'tom 3/25/2020 10:49'!texto: unTexto
texto := unTexto ! !!Respuesta methodsFor: 'accessing' stamp: 'tom 3/25/2020 10:49'!preguntaResponde:unaPregunta
preguntaResponde := unaPregunta ! !!Respuesta methodsFor: 'accessing' stamp: 'tom 3/25/2020 10:50'!usuario: unUsuario
usuario := unUsuario ! !!Respuesta methodsFor: 'accessing' stamp: 'tom 3/26/2020 18:54'!usuario 
^usuario ! !!Respuesta methodsFor: 'accessing' stamp: 'tom 3/26/2020 19:00'!eliminar
self usuario eliminarRespuesta:self! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/2/2020 15:52'!pregunta	^ preguntaResponde.! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/2/2020 15:53'!preguntaResponde	^ preguntaResponde.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Respuesta class	instanceVariableNames: ''!!Respuesta class methodsFor: 'as yet unclassified' stamp: 'tom 3/25/2020 10:48'!texto:unTexto  respondePregunta:unaPregunta usuario:unUsuario
^self new 
preguntaResponde:unaPregunta  ; 
texto:unTexto  ;
usuario:unUsuario ; yourself ! !Object subclass: #Topico	instanceVariableNames: 'nombre descripcion preguntas'	classVariableNames: ''	package: 'Parte1-model'!!Topico methodsFor: 'public' stamp: 'tom 3/27/2020 16:10'!initialize 
preguntas :=OrderedCollection new.! !!Topico methodsFor: 'public' stamp: 'tom 3/26/2020 11:47'!preguntas
^preguntas ! !!Topico methodsFor: 'public' stamp: 'tom 3/26/2020 18:54'!eliminar: unaPregunta 
"elimina una pregunta de la coleccion de preguntas"
preguntas remove: unaPregunta ! !!Topico methodsFor: 'public' stamp: 'tom 3/24/2020 23:02'!nombre:unNombre  
nombre :=unNombre ! !!Topico methodsFor: 'public' stamp: 'tom 3/26/2020 11:44'!guardar: unPregunta
preguntas add: unPregunta ! !!Topico methodsFor: 'public' stamp: 'tom 3/24/2020 23:02'!descripcion:unDescripcion
descripcion := unDescripcion ! !!Topico methodsFor: 'accessing' stamp: 'Anonymous 4/9/2020 15:50'!nombre 	^nombre.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Topico class	instanceVariableNames: ''!!Topico class methodsFor: 'as yet unclassified' stamp: 'tom 3/24/2020 23:03'!nombre:unNombre  descripcion:unDescripcion
^self new 
nombre: unNombre ;
descripcion: unDescripcion;
yourself ! !Object subclass: #Usuario	instanceVariableNames: 'nombre contrasenha fecha seguidores seguidos preguntas respuestas topicoFavoritos'	classVariableNames: ''	package: 'Parte1-model'!!Usuario methodsFor: 'accessing' stamp: 'tom 3/26/2020 19:02'!respuestas
^respuestas ! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/25/2020 11:30'!seguir:unUsuarioAseguir
"seguidos es los usuarios que sigue y seguidores los usuarios que me siguen "
seguidos add: unUsuarioAseguir .
unUsuarioAseguir agregarSeguidor:self! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/24/2020 19:13'!nombre:aName
nombre := aName ! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/26/2020 19:04'!preguntas
^preguntas ! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/27/2020 16:08'!agregarPregunta: unaPregunta
preguntas add: unaPregunta .! !!Usuario methodsFor: 'accessing' stamp: 'Anonymous 4/2/2020 11:52'!nombre	^nombre.! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/26/2020 18:21'!guardarRespuesta: unaRespuesta
respuestas add: unaRespuesta ! !!Usuario methodsFor: 'accessing' stamp: 'Anonymous 4/4/2020 19:35'!quieroPreguntasRelevantes"tengo mis topicos favoritos y mis seguidos(coleccion de usuarios)"| resultado|resultado := Set new.topicoFavoritos do: [ :t |	t preguntas do: [ :p |		resultado add: p.	].].seguidos do: [ :s |	s preguntas do: [ :p |		resultado add: p.	]].^resultado.! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/25/2020 11:16'!agregarSeguidor: unUsuario 
seguidores add: unUsuario ! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/26/2020 13:40'!seguidos
^seguidos ! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/26/2020 18:40'!eliminarPregunta: apregunta
preguntas remove: apregunta ! !!Usuario methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 19:53'!contrasenha 		^ contrasenha.! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/24/2020 19:13'!contrasenha: acontrasenha 
contrasenha :=acontrasenha ! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/26/2020 18:52'!eliminarRespuesta:unaRespuesta
respuestas remove: unaRespuesta ! !!Usuario methodsFor: 'accessing' stamp: 'Anonymous 4/1/2020 16:45'!fecha:_fechafecha:= _fecha.! !!Usuario methodsFor: 'accessing' stamp: 'tom 3/26/2020 02:47'!agregarTopicosFav:untopico
topicoFavoritos add: untopico .! !!Usuario methodsFor: 'initialization' stamp: 'tom 3/26/2020 18:19'!initialize
fecha:= Date today  .
seguidores:= OrderedCollection new .
seguidos:= OrderedCollection new.
preguntas := OrderedCollection new.
topicoFavoritos := OrderedCollection new .
respuestas :=OrderedCollection new.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/2/2020 16:12'!calcularPuntaje| respuestasAOtroUsuario |respuestasAOtroUsuario := respuestas reject:[ :ea | ea preguntaResponde usuario == self]. "Solo las respuestas que no sean suyas."^ (preguntas size * 20) + (respuestasAOtroUsuario size * 50) + ( (preguntas sum:[ :pregunta | pregunta calcularPuntaje ]) + (respuestas sum:[ :respuesta | respuesta calcularPuntaje ]) ).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'as yet unclassified' stamp: 'tom 3/24/2020 19:16'!nombreUsuario:aNombre contrasenha:acontrasenha
^self new 
nombre: aNombre ;
contrasenha:acontrasenha ;
yourself .! !WAComponent subclass: #CrearPreguntaComponent	instanceVariableNames: 'titulo texto topicos pregunta topico'	classVariableNames: ''	package: 'Parte1-UI'!!CrearPreguntaComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 14:56'!logout	self session user: nil.	self answer.! !!CrearPreguntaComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 15:16'!cancelar	titulo := nil.	texto := nil.	topicos := nil.	pregunta := nil.	self answer.! !!CrearPreguntaComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 16:59'!continuar	topicos := topicos splitOn: ','. "Tenemos una Collection de nombres  de topicos."	topicos := topicos collect: [ :ea | CuOOra soleInstance existeTopico: ea ]. "Le pedimos a CuOOra que nos dé solo los que existen"		topicos := topicos select: [ :ea | ea notNil ]. "Los nil no los queremos"	CuOOra soleInstance agregarTituloPregunta: titulo descripcion: texto usuario: (self session user) topica: topicos.	self answer.	! !!CrearPreguntaComponent methodsFor: 'hooks' stamp: 'Anonymous 4/9/2020 15:20'!style	^ '		*{		font-family: Calibri;	}		.logo{		display: inline;		float: left;	}		.conectadocomo{		float:right;		font-size: 20px;	}		.nombre{		font-weight: bold;	}		.clearboth{		clear:both;	}		form input{		padding: 5px;		margin-left: 10px;	}		button{		border: 1px solid black;		background-color: white;		margin-left: 10px;	}	'.! !!CrearPreguntaComponent methodsFor: 'initialization' stamp: 'Anonymous 4/9/2020 16:43'!initialize 	super initialize.		topicos := OrderedCollection new.	! !!CrearPreguntaComponent methodsFor: 'accessing' stamp: 'Anonymous 4/9/2020 15:07'!texto	^ texto! !!CrearPreguntaComponent methodsFor: 'accessing' stamp: 'Anonymous 4/9/2020 15:07'!titulo: anObject	titulo := anObject! !!CrearPreguntaComponent methodsFor: 'accessing' stamp: 'Anonymous 4/9/2020 15:07'!texto: anObject	texto := anObject! !!CrearPreguntaComponent methodsFor: 'accessing' stamp: 'Anonymous 4/9/2020 15:07'!topicos: anObject	topicos := anObject! !!CrearPreguntaComponent methodsFor: 'accessing' stamp: 'Anonymous 4/9/2020 15:07'!topicos	^ topicos! !!CrearPreguntaComponent methodsFor: 'accessing' stamp: 'Anonymous 4/9/2020 15:07'!titulo	^ titulo! !!CrearPreguntaComponent methodsFor: 'rendering' stamp: 'Anonymous 4/9/2020 16:47'!renderContentOn: canvas	canvas section		id: 'encabezado';		with: [ canvas heading				class: 'logo';				with: 'CuOOra'.			canvas span				class: 'conectadocomo';				with: [ canvas span						class: 'nombre';						with: self session user nombre , ' '.					canvas anchor						callback: [ self logout ];						with: 'Log out'.		].	].	canvas section class: 'clearboth'.			canvas horizontalRule.				canvas heading:'Nueva Pregunta'.	canvas horizontalRule.			canvas form: [ 		canvas paragraph: [			canvas label:'Titulo'.			canvas textInput on: #titulo of: self;placeholder:'Escriba aqui el titulo de su pregunta'.		].			canvas paragraph: [			canvas label: 'Desarrollo'.			canvas textArea on: #texto of: self;placeholder: 'Escriba aqui el desarrollo de su pregunta.'.		].			canvas textInput on: #topicos of:self; placeholder: 'Ingrese topicos separados por coma.'.				canvas button callback:[ self cancelar ];with:'Cancelar'.				canvas button callback:[ self continuar ];with:'Guardar'.].! !WAComponent subclass: #CuOOraComponent	instanceVariableNames: 'cuoora'	classVariableNames: ''	package: 'Parte1-UI'!!CuOOraComponent methodsFor: 'initialization' stamp: 'Anonymous 4/6/2020 19:45'!initialize 	super initialize .		cuoora := CuOOra soleInstance.! !!CuOOraComponent methodsFor: 'rendering' stamp: 'Anonymous 4/9/2020 16:58'!renderContentOn: canvas	self session user		ifNotNil: [ canvas section				id: 'encabezado';				with: [ canvas heading						class: 'logo';						with: 'CuOOra'.					canvas span						class: 'conectadocomo';						with: [ canvas span								class: 'nombre';								with: self session user nombre , ' '.							canvas anchor								callback: [ self logout ];								with: 'Log out'.							canvas								paragraph: [ canvas anchor										callback: [ self crearPregunta ];										with: 'Crear nueva pregunta' ] ] ].			canvas section class: 'clearboth'.			canvas horizontalRule.			canvas heading: 'Últimas preguntas'.			canvas				unorderedList: [ (cuoora obtenerPreguntasRelevantesDe: self session user)						do: [ :pregunta | 							canvas								listItem: [ canvas paragraph: pregunta titulo.									canvas										paragraph: [ canvas span: 'Realizada por '.											canvas strong: pregunta usuario nombre.											canvas												span: ' | ' , pregunta respuestas size asString , ' respuesta(s)' ].									canvas										paragraph: [ canvas												span:													pregunta likes size asString , ' likes | '														, pregunta dislikes size asString , ' dislikes' ].									canvas anchor										class: 'reaccionLike';										callback: [ cuoora darLikeA: pregunta usuario: self session user ];										with: 'like'.									canvas span: ' | '.									canvas anchor										class: 'reaccionDislike';										callback: [ cuoora darDisLikeA: pregunta usuario: self session user ];										with: 'dislike'.									canvas horizontalRule ] ] ] ]		ifNil: [ canvas span: 'Has cerrado la sesión'.			canvas anchor				callback: [ self notLoggedIn ];				with: 'Salir.' ]! !!CuOOraComponent methodsFor: 'hooks' stamp: 'Anonymous 4/9/2020 16:59'!style	^ '		*{		font-family: Calibri;	}		.logo{		display: inline;		float: left;	}		.conectadocomo{		float:right;		font-size: 20px;	}		.nombre{		font-weight: bold;	}		.clearboth{		clear:both;	}		.reaccionLike{		color: green;		font-weight: bold;	}		.reaccionDislike{		color: red;		font-weight: bold;	}	'.! !!CuOOraComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 14:47'!crearPregunta		self call: CrearPreguntaComponent new.! !!CuOOraComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 14:42'!notLoggedIn	self call: CuOOraLogIn new.! !!CuOOraComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 14:47'!logout	self session user: nil.	self answer.! !WAComponent subclass: #CuOOraLogIn	instanceVariableNames: 'nombre contrasenha'	classVariableNames: ''	package: 'Parte1-UI'!!CuOOraLogIn methodsFor: 'initialization' stamp: 'Anonymous 4/6/2020 17:56'!initialize	super initialize.	! !!CuOOraLogIn methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2020 20:01'!loggear	(CuOOra soleInstance existeUsuario: nombre con: contrasenha) ifNotNil: [ :u |			self session user: u.	   			self call: CuOOraComponent new.	].	nombre := nil.	contrasenha := nil.		! !!CuOOraLogIn methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 15:41'!contrasenha: anObject	contrasenha := anObject! !!CuOOraLogIn methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 15:41'!contrasenha	^ contrasenha! !!CuOOraLogIn methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 15:38'!nombre	^ nombre! !!CuOOraLogIn methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 15:38'!nombre: anObject	nombre := anObject! !!CuOOraLogIn methodsFor: 'hooks' stamp: 'Anonymous 4/6/2020 15:56'!style 	 ^ '	*{		font-family: calibri;	}	.btn-primary{		background-color: #007bff;		padding: 10px;		border: 0px;		border-radius: 3px;		color:white;	}		.formulario{		margin: 10px auto 10px 10%;	}'! !!CuOOraLogIn methodsFor: 'rendering' stamp: 'Anonymous 4/6/2020 15:50'!renderContentOn: canvas	canvas heading: 'CuOOra'.		canvas form class: 'formulario'; with:[		canvas paragraph: [			canvas label: 'Usuario: '.			canvas textInput on: #nombre of: self.		].				canvas paragraph: [ 			canvas label: 'Contraseña: '.			canvas textInput on: #contrasenha of: self.			].			canvas button			callback: [ self loggear ];			class: 'btn-primary';			with: 'Iniciar Sesión'.	].! !WAComponent subclass: #NavBarComponent	instanceVariableNames: ''	classVariableNames: ''	package: 'Parte1-UI'!!NavBarComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 12:50'!crearPregunta		self call: CrearPreguntaComponent new.! !!NavBarComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/9/2020 14:38'!logout	self session user: nil.	self answer.! !!NavBarComponent methodsFor: 'hooks' stamp: 'Anonymous 4/9/2020 12:49'!style	^'		*{		font-family: Calibri;	}		.logo{		display: inline;		float: left;	}		.conectadocomo{		float:right;		font-size: 20px;	}		.nombre{		font-weight: bold;	}		.clearboth{		clear:both;	}	'.! !!NavBarComponent methodsFor: 'rendering' stamp: 'Anonymous 4/9/2020 12:48'!renderContentOn: canvascanvas section id: 'encabezado'; with:[			canvas heading class: 'logo'; with: 'CuOOra'.		canvas span class:'conectadocomo';with: [			canvas span class: 'nombre'; with: (self session user nombre) , ' '.			canvas anchor callback: [ self logout ]; with: 'Log out'.			canvas paragraph: [ 				canvas anchor callback:[ self crearPregunta ];with: 'Crear nueva pregunta'.			].	].].	canvas section class:'clearboth'.		canvas horizontalRule.! !WASession subclass: #SessionWithUser	instanceVariableNames: 'user'	classVariableNames: ''	package: 'Parte1-UI'!!SessionWithUser methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 19:16'!user:_user	user := _user.! !!SessionWithUser methodsFor: 'accessing' stamp: 'Anonymous 4/6/2020 19:09'!user	^ user! !TestCase subclass: #CuOOraTest	instanceVariableNames: 'cuoora topicos1 general pregunta1 tomas jose rodrigo alan pregunta2'	classVariableNames: ''	package: 'Parte1-Tests'!!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:09'!testObtenerPreguntasDe	"topico creado en setUp"	self assert: (cuoora obtenerPreguntasDe: general)size equals: 2.! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:10'!testTodasLasPreguntasDe	^ jose preguntas .! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:09'!testDarLikeAusuario	"pregunta1 y usuario tomas crados en setUp"	cuoora darLikeA: pregunta1 usuario: tomas.		self assert: pregunta1 likes size equals:1.		! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:06'!testObtenerRespuestasDePregunta	"Se respondió en setUp"	self assert: (pregunta1 respuestas size) equals: 1.! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:07'!testAgregarRespuesta	cuoora agregarTextoRespuesta: 'Esa pregunta es ofensiva y va a ser borrada.' aLaPregunta: pregunta2 usuario: alan.			! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:14'!testBorrarPregunta	pregunta1 borrarme .	"Tomas tenia una respuesta en la pregunta1, esa respuesta ya no deberia existir..."	self assert: tomas respuestas size equals: 0.! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:09'!testDarDisLikeAusuario	"preguntas y usuarios ya creados en setUp"	cuoora darDisLikeA: pregunta2 usuario: alan.	cuoora darDisLikeA: pregunta2 usuario: tomas.		self assert: pregunta2 dislikes size equals: 2.! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:08'!testUnUsuarioSigueA	"usuarios creado en setUp"	cuoora unUsuario: jose sigueA: alan.! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 12:59'!setUp	| scify topicos1 respuesta1 topicos2 coronavirus| 	cuoora := CuOOra new.		jose := cuoora crearUsuario: 'jose' contrasenha: '1234'.	tomas := cuoora crearUsuario: 'tomas' contrasenha: '4321'.	alan := cuoora crearUsuario: 'alan' contrasenha: 'alan2'.			scify := cuoora agregarNombreTopico: 'scify' descripcion: 'Ciencia ficcion.'.	general := cuoora agregarNombreTopico: 'general' descripcion: 'General.'.	coronavirus := cuoora agregarNombreTopico: 'coronavirus' descripcion: 'Everything about coronavirus.'.		topicos1 := OrderedCollection new.	topicos1 add: scify.	topicos1 add:general.		topicos2 := OrderedCollection new.	topicos2 add: general.	topicos2 add: coronavirus.			pregunta1 := cuoora agregarTituloPregunta: 'Sobre aliens' descripcion: 'Existen los aliens?' usuario: jose topica: topicos1.	pregunta2 := cuoora agregarTituloPregunta: 'La reina tiene coronavirus?' descripcion: 'Yes or what?' usuario: jose topica: topicos2.		respuesta1 := cuoora agregarTextoRespuesta: 'Michael Jackson es un alien.' aLaPregunta: pregunta1 usuario: tomas.	cuoora agregarTopicoFav: scify para: jose.		! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/4/2020 17:13'!testObtenerPuntajeDe   | preguntaDeTomas topicosTomas| 	"jose tiene 2 preguntas creadas en setUp. * 20"		"+ 1 like   "	cuoora darLikeA: pregunta1 usuario: tomas.		topicosTomas := OrderedCollection new.	topicosTomas add: general.		preguntaDeTomas := cuoora agregarTituloPregunta: 'Pregunta de prueba' descripcion: '???' usuario: tomas topica: topicosTomas.		"+ 1 respuesta  *50 "	cuoora agregarTextoRespuesta: 'Tal vez.' aLaPregunta: preguntaDeTomas  usuario: jose.		self assert: jose calcularPuntaje equals: ( (2*20) + 1 + 50).	! !!CuOOraTest methodsFor: 'running' stamp: 'Anonymous 4/2/2020 15:11'!testTodasLasRespuestasDe	^ jose respuestas.! !